{
  "info": {
    "title": "glossaries",
    "version": ""
  },
  "paths": {
    "/v1/glossaries": {
      "get": {
        "tags": [
          "glossaries"
        ],
        "summary": "Returns all glossaries.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/glossariesResult"
                }
              }
            },
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The user does not have privileges to perform the requested action."
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "countTotal",
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to request total count for query"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "The number of glossaries to get."
          },
          {
            "in": "query",
            "name": "next",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the next page."
          },
          {
            "in": "query",
            "name": "prev",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the previous page."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "+name",
                "-name",
                "description",
                "+description",
                "-description"
              ],
              "type": "string"
            },
            "description": "Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "post": {
        "tags": [
          "glossaries"
        ],
        "summary": "Creates a new glossary. Only a steward can create a glossary.\n",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/glossary"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Glossary version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully created a new glossary."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The user does not have privileges to perform the requested action."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createGlossary"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}": {
      "get": {
        "tags": [
          "glossaries"
        ],
        "summary": "Retrieves a glossary.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/glossary"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Glossary version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully retrieved the glossary."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The glossary is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The id of the glossary to retrieve."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "patch": {
        "tags": [
          "glossaries"
        ],
        "summary": "Updates glossary properties with json-patch formated data",
        "responses": {
          "204": {
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Glossary version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Glossary updated successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad request. Payload could not be parsed to a JSON Patch or Patch operations are invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not authorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The term to patch was not found."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "headers": {
              "retry-after": {
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "description": "The amount of seconds to wait before retrying the request."
              }
            },
            "description": "Request has been rate limited."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the glossary was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JSONPatchArray"
              }
            }
          },
          "required": true
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "put": {
        "tags": [
          "glossaries"
        ],
        "summary": "Updates a glossary.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/glossary"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Glossary version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully updated the glossary."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The id of the glossary to update."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the glossary was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createGlossary"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "delete": {
        "tags": [
          "glossaries"
        ],
        "summary": "Deletes a glossary and all of its terms.",
        "responses": {
          "204": {
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The glossary is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The id of the glossary to delete."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/actions/export": {
      "get": {
        "tags": [
          "glossaries"
        ],
        "summary": "Exports a glossary.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportGlossary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "Successfully exported the glossary."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The glossary is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "enum": [
                "json",
                "xlsx"
              ],
              "type": "string"
            },
            "required": false,
            "description": "The output format"
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      }
    },
    "/v1/glossaries/{id}/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Returns a list of categories for a glossary.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoriesResult"
                }
              }
            },
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "query",
            "name": "countTotal",
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to request total count for query"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "The number of terms to get."
          },
          {
            "in": "query",
            "name": "next",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the next page."
          },
          {
            "in": "query",
            "name": "prev",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the previous page."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "description",
                "+description",
                "-description",
                "name",
                "+name",
                "-name",
                "update",
                "+update",
                "-update"
              ],
              "type": "string"
            },
            "description": "Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Creates a new category.\n",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Category version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully created a new category."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCategory"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/categories/{categoryId}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Retrieves a category.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Category version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully retrieved the category."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The category id."
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the category was fetched."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "patch": {
        "tags": [
          "categories"
        ],
        "summary": "Updates category properties with json-patch formated data",
        "responses": {
          "204": {
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Category version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Category updated successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad request. Payload could not be parsed to a JSON Patch or Patch operations are invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not authorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The term to patch was not found."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "headers": {
              "retry-after": {
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "description": "The amount of seconds to wait before retrying the request."
              }
            },
            "description": "Request has been rate limited."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The category id."
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the category was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JSONPatchArray"
              }
            }
          },
          "required": true
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Updates a category.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Category version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully updated the category."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The category id."
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the category was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCategory"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Deletes a category.",
        "responses": {
          "204": {
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The id for the category to delete. All subcategories are also deleted"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The id of the glossary."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/terms": {
      "get": {
        "tags": [
          "terms"
        ],
        "summary": "Returns a list of terms for a glossary.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termsResult"
                }
              }
            },
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "query",
            "name": "countTotal",
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to request total count for query"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            },
            "description": "Optional SCIM filter to be used to filter terms\nUsable fields are\n\n- id\n- name\n- relatedInformation\n- description\n- abbreviation\n- tags\n- stewards\n- status\n- categories\n"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "The number of terms to get."
          },
          {
            "in": "query",
            "name": "next",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the next page."
          },
          {
            "in": "query",
            "name": "prev",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the previous page."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "abbreviation",
                "+abbreviation",
                "-abbreviation",
                "description",
                "+description",
                "-description",
                "name",
                "+name",
                "-name",
                "status",
                "+status",
                "-status",
                "updated",
                "+updated",
                "-updated"
              ],
              "type": "string"
            },
            "description": "Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "post": {
        "tags": [
          "terms"
        ],
        "summary": "Creates a new term.\n",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/term"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully created a new term."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTerm"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/terms/{termId}": {
      "get": {
        "tags": [
          "terms"
        ],
        "summary": "Retrieves a term.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/term"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully retrieved the term."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "patch": {
        "tags": [
          "terms"
        ],
        "summary": "Updates term properties with json-patch formated data",
        "responses": {
          "204": {
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Term updated successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Bad request. Payload could not be parsed to a JSON Patch or Patch operations are invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Not authorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The term to patch was not found."
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Conditional update failed. Trying to modify an old version."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "headers": {
              "retry-after": {
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "description": "The amount of seconds to wait before retrying the request."
              }
            },
            "description": "Request has been rate limited."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the term was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JSONPatchArray"
              }
            }
          },
          "required": true
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "put": {
        "tags": [
          "terms"
        ],
        "summary": "Updates a term.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/term"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully updated the term."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Conditional update failed. Trying to modify an old version."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the term was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTerm"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      },
      "delete": {
        "tags": [
          "terms"
        ],
        "summary": "Deletes a term.",
        "responses": {
          "204": {
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/terms/{termId}/actions/change-status": {
      "post": {
        "tags": [
          "terms"
        ],
        "summary": "Changes the status of the term. Only a steward can verify a term. Once the term is verified only a steward can modify the term.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/term"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully updated the term status."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Conditional update failed. Trying to modify an old version."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "draft",
                "verified",
                "deprecated"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The status to update to."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the term was fetched."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/terms/{termId}/links": {
      "get": {
        "tags": [
          "links"
        ],
        "summary": "Returns a list of links assigned to a term.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linksResult"
                }
              }
            },
            "description": "Successful Operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "query",
            "name": "countTotal",
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to request total count for query"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            },
            "description": "Optional SCIM filter to be used to filter terms"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "The number of terms to get."
          },
          {
            "in": "query",
            "name": "next",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the next page."
          },
          {
            "in": "query",
            "name": "prev",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the previous page."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "type",
                "+type",
                "-type",
                "subtype",
                "+subtype",
                "-subtype",
                "created",
                "+created",
                "-created"
              ],
              "type": "string"
            },
            "description": "Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      },
      "post": {
        "tags": [
          "links"
        ],
        "summary": "Creates a new link to a term.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termLinksTo"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                },
                "description": "Term version"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date and time of the glossary"
              }
            },
            "description": "Successfully created the link."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          },
          "412": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "Conditional update failed. Trying to modify an old version."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "header",
            "name": "if-match",
            "schema": {
              "type": "string",
              "example": "if-match: B323333"
            },
            "description": "Optional header to do conditional updates. Using the Etag value that was returned the last time the term was fetched."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/termCreateLinksTo"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    },
    "/v1/glossaries/{id}/terms/{termId}/revisions": {
      "get": {
        "tags": [
          "terms"
        ],
        "summary": "Retrieves previous revisions of a term.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/termsResult"
                }
              }
            },
            "description": "Successfully retrieved the revisions."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The request is in incorrect format"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The operation failed due to insufficient permissions."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "The record is not found"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The glossary id."
          },
          {
            "in": "path",
            "name": "termId",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "required": true,
            "description": "The term id."
          },
          {
            "in": "query",
            "name": "countTotal",
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to request total count for query"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            },
            "description": "The number of terms to get."
          },
          {
            "in": "query",
            "name": "next",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the next page."
          },
          {
            "in": "query",
            "name": "prev",
            "schema": {
              "type": "string"
            },
            "description": "Optional parameter to request the previous page."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "update",
                "+update",
                "-update"
              ],
              "type": "string"
            },
            "description": "Optional resource field name to sort on, eg. name. Can be prefixed with +/- to determine order, defaults to (+) ascending."
          }
        ],
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "1",
          "limit": 1000
        }
      }
    },
    "/v1/glossaries/actions/import": {
      "post": {
        "tags": [
          "glossaries"
        ],
        "summary": "Creates a new glossary, including categories and terms, based on a glossary definition file.\nSupported formats are currently, qlik, atlan and atlas\n",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/glossary"
                }
              }
            },
            "description": "Successfully created a new glossary."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponseBadRequest"
                }
              }
            },
            "description": "See custom codes"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponseForbidden"
                }
              }
            },
            "description": "See custom codes"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponseNotFound"
                }
              }
            },
            "description": "See custom codes"
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "importerAsFallbackSteward",
            "schema": {
              "type": "boolean"
            },
            "description": "Appending the current importer user as steward to categories/terms where no steward is defined/not match the identity service."
          },
          {
            "in": "query",
            "name": "lookupUserOnEmail",
            "schema": {
              "type": "boolean"
            },
            "description": "Using email in the steward fields to lookup userIds in the identity service"
          },
          {
            "in": "query",
            "name": "spaceId",
            "schema": {
              "type": "string",
              "format": "uid",
              "example": "507f191e810c19729de860ea"
            },
            "description": "The spaceId (leave blank or omit for personal)"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/qlikGlossary"
              }
            },
            "application/json+qlik": {
              "schema": {
                "$ref": "#/components/schemas/qlikGlossary"
              }
            },
            "application/json+atlan": {
              "schema": {
                "$ref": "#/components/schemas/atlanGlossary"
              }
            },
            "application/json+atlas": {
              "schema": {
                "$ref": "#/components/schemas/atlasGlossary"
              }
            }
          }
        },
        "x-qlik-visibility": "public",
        "x-qlik-stability": "stable",
        "x-qlik-categories": [
          "external/manage"
        ],
        "x-qlik-deprecated": false,
        "x-qlik-tier": {
          "tier": "2",
          "limit": 100
        }
      }
    }
  },
  "x-qlik-categories": [
    "external/manage"
  ],
  "openapi": "3.0.0",
  "components": {
    "schemas": {
      "atlanEntity": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/atlanEntityAttributes"
          },
          "relationshipAttributes": {
            "$ref": "#/components/schemas/atlanRelationshipAttributes"
          }
        }
      },
      "atlanEntityAttributes": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "examples": {},
          "relations": {
            "$ref": "#/components/schemas/atlanResourceLink"
          },
          "displayText": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "relationGuid": {
            "type": "string"
          },
          "parentCategory": {
            "type": "string"
          },
          "userDescription": {
            "type": "string"
          }
        }
      },
      "atlanGlossary": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/atlanEntity"
          },
          "referredEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/atlanEntity"
            }
          }
        },
        "description": "Atlan glossary format. See https://apidocs.atlan.com/"
      },
      "atlanRelationEntity": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "entityStatus": {
            "type": "string"
          }
        }
      },
      "atlanRelationshipAttributes": {
        "type": "object",
        "properties": {
          "isA": {
            "$ref": "#/components/schemas/atlanTermHeader"
          },
          "terms": {
            "$ref": "#/components/schemas/atlanRelationEntity"
          },
          "seeAlso": {
            "$ref": "#/components/schemas/atlanTermHeader"
          },
          "antonyms": {
            "$ref": "#/components/schemas/atlanTermHeader"
          },
          "synonyms": {
            "$ref": "#/components/schemas/atlanTermHeader"
          },
          "categories": {
            "$ref": "#/components/schemas/atlanRelationEntity"
          },
          "classifies": {
            "$ref": "#/components/schemas/atlanTermHeader"
          },
          "replacedBy": {
            "$ref": "#/components/schemas/atlanTermHeader"
          }
        }
      },
      "atlanResourceLink": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "atlanTermHeader": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "steward": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "entityStatus": {
            "type": "string"
          },
          "relationGuid": {
            "type": "string"
          }
        }
      },
      "atlasCategory": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "categoryGuid": {
            "type": "string"
          },
          "relationGuid": {
            "type": "string"
          },
          "parentCategoryGuid": {
            "type": "string"
          }
        }
      },
      "atlasGlossary": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/atlasTerm"
            }
          },
          "usage": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/atlasCategory"
            }
          },
          "qualifiedName": {
            "type": "string"
          },
          "longDescription": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          }
        }
      },
      "atlasTerm": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "steward": {
            "type": "string"
          },
          "termGuid": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "relationGuid": {
            "type": "string"
          }
        }
      },
      "categoriesResult": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/category"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/resultMeta"
          },
          "links": {
            "$ref": "#/components/schemas/pageLinks"
          }
        }
      },
      "category": {
        "type": "object",
        "required": [
          "id",
          "glossaryId",
          "name",
          "description",
          "createdBy",
          "createdAt",
          "updatedBy",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The id for resolving updates in future imports/updates. \nOpposed to the id of terms, id on category are not resolved by backend. Any category referred in the category array in terms will have to be identical to the id property of the category. If not, the category reference will be discarded.\n"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "stewards": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uid"
            },
            "example": [
              "6305e8691a1d504df06efab9",
              "63075b341a1d504df06efabc"
            ],
            "description": "This list contains the uids of the stewards of the category."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true,
            "description": "The uid of the user who last updated the category"
          },
          "glossaryId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "createCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category. May not be identical to another category belonging to the same parent.\n"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "stewards": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uid"
            },
            "example": [
              "6305e8691a1d504df06efab9",
              "63075b341a1d504df06efabc"
            ],
            "description": "This list contains the uids of the stewards of the category."
          },
          "description": {
            "type": "string"
          }
        }
      },
      "createGlossary": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Organization wide glossary",
            "description": "Name of the glossary"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Red",
              "Sales"
            ],
            "description": "List of tags for glossary"
          },
          "spaceId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "description": "Unique unique identifier of the space to contain the glossary"
          },
          "overview": {
            "type": "string",
            "description": "Overview of the glossary content"
          },
          "description": {
            "type": "string",
            "example": "This glossary contains definitions and concepts of business terms.",
            "description": "Description of the glossary"
          },
          "termTemplate": {
            "$ref": "#/components/schemas/termTemplate"
          }
        }
      },
      "createTerm": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Earnings Before Interest and Tax (EBIT)"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Finance",
              "Accounting"
            ]
          },
          "linksTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termCreateLinksTo"
            }
          },
          "stewards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "6305e8691a1d504df06efab9",
              "63075b341a1d504df06efabc"
            ],
            "description": "This list contain the uids for the term's stewards"
          },
          "relatesTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termRelatesTo"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": [
              "123e4567-e89b-12d3-a456-426614174000",
              "123e4567-e89b-12d3-a456-426614174001"
            ],
            "description": "Category Ids that the term belongs to. NOTE! In case of import the string refers to the index of the category in the import document."
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string",
            "example": "EBIT"
          },
          "relatedInformation": {
            "type": "string",
            "example": "In accounting and finance, earnings before interest and taxes (EBIT) is a measure of a firm's profit that includes all incomes and expenses (operating and non-operating) except interest expenses and income tax expenses."
          }
        }
      },
      "errorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorResponseCode"
            }
          },
          "traceId": {
            "type": "string",
            "example": "795dedf8cf38b60088a6e4feb6eace75"
          }
        }
      },
      "errorResponseBadRequest": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorResponseCode"
            }
          },
          "traceId": {
            "type": "string",
            "example": "795dedf8cf38b60088a6e4feb6eace75"
          }
        },
        "description": "### Custom error codes\n* BG-1 - Context JWT is missing tenantId.\n* BG-2 - Context JWT is missing userId.\n* BG-4 - Invalid or unsupported Content Type. Valid types are: application/json, application/json+qlik, application/json+atlan, application/json+atlas\n* BG-5 - Failed to decode JSON payload.\n* BG-6 - A glossary name is required.\n* BG-7 - Two categories with the same name cannot have the same parent.\n* BG-11 - Glossary validation failed - A value or parameter is invalid or not set\n* BG-12 - Category validation failed - A value or parameter is invalid or not set\n* BG-13 - Term validation failed - A value or parameter is invalid or not set\n* BG-14 - Two or more categories share Id\n* BG-15 - Two or more terms share Id\n* BG-16 - Not detecting proper Atlas format\n* BG-17 - Not detecting proper Atlan format\n* BG-18 - Not detecting proper Qlik format\n* BG-19 - Invalid format in term\n* BG-20 - Duplicate link definition\n* BG-21 - Rich text validation failed\n* BG-22 - Import cancelled\n* BG-23 - Duplicate link related\n"
      },
      "errorResponseCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        }
      },
      "errorResponseForbidden": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorResponseCode"
            }
          },
          "traceId": {
            "type": "string",
            "example": "795dedf8cf38b60088a6e4feb6eace75"
          }
        },
        "description": "### Custom error codes\n* BG-3 - Access denied, no read access\n* BG-30 - Feature not enabled on tenant.\n"
      },
      "errorResponseNotFound": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorResponseCode"
            }
          },
          "traceId": {
            "type": "string",
            "example": "795dedf8cf38b60088a6e4feb6eace75"
          }
        },
        "description": "### Custom error codes\n* BG-8 - Glossary not found\n* BG-9 - Category not found\n* BG-10 - Term not found\n"
      },
      "exportCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The id for resolving updates in future imports/updates. \nOpposed to the id of terms, id on category are not resolved by backend. Any category referred in the category array in terms will have to be identical to the id property of the category. If not, the category reference will be discarded.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the category. May not be identical to another category belonging to the same parent.\n"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "description": {
            "type": "string"
          },
          "stewardDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          }
        }
      },
      "exportGlossary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/exportTerm"
            }
          },
          "ownerId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea"
          },
          "spaceId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea"
          },
          "overview": {
            "type": "string",
            "example": "glossary overview"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true,
            "description": "The uid of the user who last updated the glossary"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/exportCategory"
            }
          },
          "description": {
            "type": "string"
          },
          "termTemplate": {
            "$ref": "#/components/schemas/termTemplate"
          }
        }
      },
      "exportTerm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The id of the term. Used to identify the term in future updates. If not provided, will use the leading 30 chars of the term name and an incremental index\n"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/importOwner"
            }
          },
          "linksTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termCreateLinksTo"
            }
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          },
          "relatesTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termRelatesTo"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": [
              "123e4567-e89b-12d3-a456-426614174000"
            ],
            "description": "Categories that the term belongs to. Refers to the `id` property of the category object\n"
          },
          "description": {
            "type": "string",
            "example": "description"
          },
          "abbreviation": {
            "type": "string",
            "example": "abbr"
          },
          "stewardDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          }
        }
      },
      "glossariesResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/glossary"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/resultMeta"
          },
          "links": {
            "$ref": "#/components/schemas/pageLinks"
          }
        }
      },
      "glossary": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "tags",
          "ownerId",
          "createdBy",
          "createdAt",
          "updatedBy",
          "updatedAt",
          "spaceId",
          "termTemplate",
          "overview"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "Unique identifier of the glossary"
          },
          "name": {
            "type": "string",
            "example": "Organization wide glossary",
            "description": "Name of the glossary"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Red",
              "Sales"
            ],
            "description": "List of tags associated with the glossary."
          },
          "ownerId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "description": "The unique identifier of the glossary owner"
          },
          "spaceId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "description": "The unique identifier of the space containg the glossary"
          },
          "overview": {
            "type": "string",
            "description": "Overview of the glossary contents"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true,
            "description": "Datetime when the glossary was created"
          },
          "createdBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true,
            "description": "Unique identifier of the user who created the glossary"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true,
            "description": "Datetime when the glossary was updated"
          },
          "updatedBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true,
            "description": "The unique identifier of the user who last updated the glossary"
          },
          "description": {
            "type": "string",
            "example": "This glossary contains definitions and concepts of business terms.",
            "description": "Description of the glossary"
          },
          "termTemplate": {
            "$ref": "#/components/schemas/termTemplate"
          }
        }
      },
      "importCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The id for resolving updates in future imports/updates. \nOpposed to the id of terms, id on category are not resolved by backend. Any category referred in the category array in terms will have to be identical to the id property of the category. If not, the category reference will be discarded.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the category. May not be identical to another category belonging to the same parent.\n"
          },
          "parentId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "stewards": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uid",
              "example": "507f191e810c19729de860ea"
            }
          },
          "description": {
            "type": "string"
          },
          "stewardDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          }
        }
      },
      "importOwner": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Joe Smith"
          },
          "email": {
            "type": "string",
            "example": "joe.smith@qlik.com"
          },
          "userId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea"
          }
        }
      },
      "importTerm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The id of the term. Used to identify the term in future updates. If not provided, will use the leading 30 chars of the term name and an incremental index\n"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/importOwner"
            }
          },
          "linksTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termCreateLinksTo"
            }
          },
          "stewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          },
          "relatesTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termRelatesTo"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": [
              "123e4567-e89b-12d3-a456-426614174000"
            ],
            "description": "Categories that the term belongs to. Refers to the `id` property of the category object\n"
          },
          "description": {
            "type": "string",
            "example": "description"
          },
          "abbreviation": {
            "type": "string",
            "example": "abbr"
          },
          "stewardDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stewardDetail"
            }
          }
        }
      },
      "JSONPatch": {
        "type": "object",
        "required": [
          "op",
          "path",
          "value"
        ],
        "properties": {
          "op": {
            "enum": [
              "replace"
            ],
            "type": "string",
            "description": "The operation to be performed."
          },
          "path": {
            "type": "string",
            "description": "A JSON Pointer."
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "description": "The value to be used for this operation."
          }
        },
        "description": "A JSON Patch document as defined in http://tools.ietf.org/html/rfc6902."
      },
      "JSONPatchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JSONPatch"
        },
        "example": [
          {
            "op": "replace",
            "path": "/name",
            "value": "new name"
          },
          {
            "op": "replace",
            "path": "/description",
            "value": "new description"
          }
        ],
        "description": "An array of JSON Patch documents"
      },
      "linksResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termLinksTo"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/resultMeta"
          },
          "links": {
            "$ref": "#/components/schemas/pageLinks"
          }
        }
      },
      "pageLink": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          }
        }
      },
      "pageLinks": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/pageLink"
          },
          "prev": {
            "$ref": "#/components/schemas/pageLink"
          },
          "self": {
            "$ref": "#/components/schemas/pageLink"
          }
        }
      },
      "qlikGlossary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/importTerm"
            }
          },
          "spaceId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea"
          },
          "overview": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/importCategory"
            }
          },
          "description": {
            "type": "string"
          },
          "termTemplate": {
            "$ref": "#/components/schemas/termTemplate"
          }
        }
      },
      "resultMeta": {
        "type": "object",
        "properties": {
          "countTotal": {
            "type": "integer"
          }
        }
      },
      "stewardDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uid"
          }
        }
      },
      "term": {
        "type": "object",
        "required": [
          "id",
          "glossaryId",
          "revision",
          "name",
          "description",
          "relatedInformation",
          "abbrevation",
          "tags",
          "stewards",
          "createdBy",
          "createdAt",
          "updatedBy",
          "updatedAt",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "Earnings Before Interest and Tax (EBIT)"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Finance",
              "Accounting"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/termStatus"
          },
          "linksTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termLinksTo"
            }
          },
          "revision": {
            "type": "number",
            "example": 0
          },
          "stewards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "6305e8691a1d504df06efab9",
              "63075b341a1d504df06efabc"
            ],
            "description": "This list contains the uids of the terms data stewards."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true
          },
          "relatesTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/termRelatesTo"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "readOnly": true,
            "description": "The uid of the user who last updated the term"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "example": [
              "123e4567-e89b-12d3-a456-426614174000",
              "123e4567-e89b-12d3-a456-426614174001"
            ]
          },
          "glossaryId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string",
            "example": "EBIT"
          },
          "relatedInformation": {
            "type": "string",
            "example": "In accounting and finance, earnings before interest and taxes (EBIT) is a measure of a firm's profit that includes all incomes and expenses (operating and non-operating) except interest expenses and income tax expenses."
          }
        }
      },
      "termCreateLinksTo": {
        "type": "object",
        "required": [
          "resourceType",
          "resourceId"
        ],
        "properties": {
          "type": {
            "enum": [
              "definition",
              "related"
            ],
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceType": {
            "enum": [
              "app",
              "dataset"
            ],
            "type": "string"
          },
          "subResourceId": {
            "type": "string"
          },
          "subResourceName": {
            "type": "string"
          },
          "subResourceType": {
            "enum": [
              "master_dimension",
              "master_measure",
              "field"
            ],
            "type": "string"
          }
        },
        "description": "Describes links to other data assets such as analytics applications or dataset."
      },
      "termLinksTo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "x-qlik-filterable": true
          },
          "name": {
            "type": "string",
            "example": "Sales App"
          },
          "type": {
            "enum": [
              "definition",
              "related"
            ],
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "Describes reason for item status during batch operation. E.g. why an error occurs during creation."
          },
          "status": {
            "type": "number",
            "example": 201,
            "description": "Http status code for item during batch operation."
          },
          "openUrl": {
            "type": "string",
            "example": "https://tenant.qlik.com/sense/app/52bc4307-f9f2-4ce6-b521-67ca87018759"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "x-qlik-filterable": true
          },
          "resourceId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "Different formats based on resource type. Could be e.g. OID or UUID.",
            "x-qlik-filterable": true
          },
          "resourceType": {
            "enum": [
              "app",
              "dataset"
            ],
            "type": "string",
            "x-qlik-filterable": true
          },
          "subResourceId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "Different formats based on subresource type. Could be e.g. OID or UUID.",
            "x-qlik-filterable": true
          },
          "resourceSpaceId": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea"
          },
          "subResourceName": {
            "type": "string",
            "example": "Sales YTD"
          },
          "subResourceType": {
            "enum": [
              "master_dimension",
              "master_measure",
              "field"
            ],
            "type": "string",
            "x-qlik-filterable": true
          },
          "subResourceInvalid": {
            "type": "boolean",
            "description": "Populated and true if no matching subresource is found on parent resource. E.g. if a dataset field no longer exist but a link to that field exists."
          }
        },
        "description": "Describes links to other entities such as qlik charts, dataset columns etc."
      },
      "termRelatesTo": {
        "type": "object",
        "required": [
          "termId",
          "type"
        ],
        "properties": {
          "type": {
            "enum": [
              "isA",
              "hasA",
              "seeAlso",
              "synonym",
              "antonym",
              "classifies",
              "other"
            ],
            "type": "string",
            "description": "How the term related to the other object"
          },
          "termId": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier of the related term. NOTE! In case of import the string refers to the index of the term in the import document."
          }
        }
      },
      "termsResult": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/term"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/resultMeta"
          },
          "links": {
            "$ref": "#/components/schemas/pageLinks"
          }
        }
      },
      "termStatus": {
        "type": "object",
        "required": [
          "type",
          "updatedBy",
          "updatedAt"
        ],
        "properties": {
          "type": {
            "enum": [
              "draft",
              "verified",
              "deprecated"
            ],
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-10-02T14:20:50.52Z",
            "description": "Time when the state was changed"
          },
          "updatedBy": {
            "type": "string",
            "format": "uid",
            "example": "507f191e810c19729de860ea",
            "description": "The unique identifier of the user who last changed the status of the term"
          }
        },
        "description": "Terms status is used determine the status of a term"
      },
      "termTemplate": {
        "type": "object",
        "properties": {
          "relatedInformation": {
            "type": "string",
            "description": "Template text for new terms"
          }
        }
      }
    }
  }
}